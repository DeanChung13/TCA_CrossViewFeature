
# Created by https://www.gitignore.io/api/xcode,macos,cocoapods
# Edit at https://www.gitignore.io/?templates=xcode,macos,cocoapods

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### Xcode ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Xcode Patch
*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcworkspace/contents.xcworkspacedata
/*.gcno

### Xcode Patch ###
**/xcshareddata/WorkspaceSettings.xcsettings

### fastlane ###
# fastlane - A streamlined workflow tool for Cocoa deployment
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

# fastlane specific
fastlane/report.xml

# deliver temporary files
fastlane/Preview.html

# snapshot generated screenshots
fastlane/screenshots/**/*.png
fastlane/screenshots/screenshots.html

# scan temporary files
fastlane/test_output

# env
fastlane/.env.default

#firebase cli api key
fastlane/NFWJZXZ86G.json

fastlane/graph.json

in-app-events

# End of https://www.gitignore.io/api/xcode,macos,cocoapods

AmazingTalker.app.dSYM.zip
AmazingTalker.ipa
upload_dsym_results.log

# graphQL generate files
AmazingTalker/Sources/Network/GraphQL/schema.json
AmazingTalker/Sources/Network/GraphQL/API.swift

upload_dsym_results

# tuist
Tuist/Signing
Tuist/.build
Tuist/.swiftpm

AmazingTalker.xcodeproj
AmazingTalker.xcworkspace
Derived/
Cache/
.git_token
SourcePackages/

#Apollo

!ApolloGraphQL/*
ApolloGraphQL/*
!ApolloGraphQL/GraphQL/
!ApolloGraphQL/Sources/
ApolloGraphQL/Sources/*
!ApolloGraphQL/Sources/GLNullable/
!ApolloGraphQL/Sources/Schema/
ApolloGraphQL/Sources/Schema/*
!ApolloGraphQL/Sources/Schema/CustomScalars/

apollo-ios-cli
RecaptchaEnterprise/

!vendor/*
vendor/bundle/*
vendor/DouyinOpenSDK.framework
